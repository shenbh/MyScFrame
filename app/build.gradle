apply plugin: 'com.android.application'Properties properties = new Properties()properties.load(project.rootProject.file('local.properties').newDataInputStream())//获取时间戳def getDate() {    return new Date().format('MMddHHmm')}android {    compileSdkVersion 26    buildToolsVersion '26.0.3'    defaultConfig {        applicationId "com.caihan.myscframe"        minSdkVersion 19        targetSdkVersion 26        versionCode 20        versionName "1.1.0"        multiDexEnabled true//开启multi-dexing支持//        v2SigningEnabled false    }    signingConfigs {        releaseConfig {            storeFile file(properties.getProperty("RELEASE_STORE_FILE"))            storePassword properties.getProperty("RELEASE_STORE_PASSWORD")            keyAlias properties.getProperty("RELEASE_KEY_ALIAS")            keyPassword properties.getProperty("RELEASE_KEY_PASSWORD")            v2SigningEnabled false        }        debugConfig {            storeFile file(properties.getProperty("RELEASE_STORE_FILE"))            storePassword properties.getProperty("RELEASE_STORE_PASSWORD")            keyAlias properties.getProperty("RELEASE_KEY_ALIAS")            keyPassword properties.getProperty("RELEASE_KEY_PASSWORD")            v2SigningEnabled false        }    }    buildTypes {        release {            minifyEnabled true            zipAlignEnabled true//zipAlign优化            shrinkResources false// 移除无用的resource文件,AS2.2已经包含            buildConfigField "boolean", "LOG_DEBUG", "false"    //关闭调试log            buildConfigField "boolean", "USE_CANARY", "false"            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro', '../ScFrame/proguard-rules.pro'            signingConfig signingConfigs.releaseConfig            manifestPlaceholders =                    [APP_URL   : properties.getProperty("APP_URL"),                     APP_ID    : properties.getProperty("APP_ID"),                     APP_KEY   : properties.getProperty("APP_KEY"),                     H5_JS_NAME: properties.getProperty("H5_JS_NAME"),                    ]        }        debug {            minifyEnabled false            zipAlignEnabled true//zipAlign优化            shrinkResources false// 移除无用的resource文件,AS2.2已经包含            buildConfigField "boolean", "LOG_DEBUG", "true" //显示Log            buildConfigField "boolean", "USE_CANARY", "true"            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro', '../ScFrame/proguard-rules.pro'            signingConfig signingConfigs.debugConfig            manifestPlaceholders =                    [APP_URL   : properties.getProperty("APP_URL_TEST"),                     APP_ID    : properties.getProperty("APP_ID_TEST"),                     APP_KEY   : properties.getProperty("APP_KEY_TEST"),                     H5_JS_NAME: properties.getProperty("H5_JS_NAME_TEST"),                    ]        }    }    //修改生成的apk名字    android.applicationVariants.all { variant ->        variant.outputs.all {            def releaseApkName = '';            if (variant.productFlavors[0] != null) {                releaseApkName = 'Scframe-' + variant.productFlavors[0].name +                        '-' + getDate() + '-v' + variant.versionName + '-' + variant.versionCode;            } else {                releaseApkName = 'Scframe-' + getDate() + '-v' + variant.versionName +                        '-' + variant.versionCode;            }            outputFileName = releaseApkName + '-' + variant.buildType.name + '.apk';        }    }    sourceSets {        main {            jniLibs.srcDirs = ['libs']        }        instrumentTest.setRoot('tests')        debug.setRoot('build-types/debug')        release.setRoot('build-types/release')    }}configurations.all {    resolutionStrategy.eachDependency { DependencyResolveDetails details ->        def requested = details.requested        if (requested.group == 'com.android.support') {            if (!requested.name.startsWith("multidex")) {                details.useVersion '26.1.0'            }        } else if (requested.group == 'com.squareup.retrofit2') {            details.useVersion '2.3.0'        }    }}dependencies {    implementation fileTree(include: ['*.jar'], dir: 'libs')    implementation project(':ScFrame')    implementation 'com.jakewharton:butterknife:8.8.1'    implementation 'com.android.support.constraint:constraint-layout:1.1.0'    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'}